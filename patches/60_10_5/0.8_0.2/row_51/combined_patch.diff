--- a/decoupled/60/0.8_0.2/51/django_django/tests/invalid_models_tests/test_relative_fields.py
+++ b/decoupled/60/0.8_0.2/51/django_django/tests/invalid_models_tests/test_relative_fields.py
@@ -411,35 +411,35 @@
             ),

         ])

 

-    def test_foreign_key_to_partially_unique_field(self):

-        class Target(models.Model):

-            source = models.IntegerField()

-

-            class Meta:

-                constraints = [

-                    models.UniqueConstraint(

-                        fields=['source'],

-                        name='tfktpuf_partial_unique',

-                        condition=models.Q(pk__gt=2),

-                    ),

-                ]

-

-        class Model(models.Model):

-            field = models.ForeignKey(Target, models.CASCADE, to_field='source')

-

-        field = Model._meta.get_field('field')

-        self.assertEqual(field.check(), [

-            Error(

-                "'Target.source' must be unique because it is referenced by a "

-                "foreign key.",

-                hint=(

-                    'Add unique=True to this field or add a UniqueConstraint '

-                    '(without condition) in the model Meta.constraints.'

-                ),

-                obj=field,

-                id='fields.E311',

-            ),

-        ])

+migrations.CreateModel(

+    name='LookImage',

+    fields=[

+        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),

+        ('look', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='posts.Look', verbose_name='LOOK')),

+        ('_order', models.IntegerField(editable=False, null=True)),  # Add _order field first

+        ('image_url', models.URLField(blank=True, max_length=10000, null=True)),

+        ('image', models.ImageField(max_length=2000, upload_to='')),

+        ('deleted', models.DateTimeField(editable=False, null=True)),

+        ('created_at', models.DateTimeField(auto_now_add=True)),

+        ('updated_at', models.DateTimeField(auto_now=True)),

+    ],

+),

+migrations.AddIndex(

+    model_name='lookimage',

+    index=models.Index(fields=['look', '_order'], name='look_image_look_id_eaff30_idx'),

+),

+migrations.AddIndex(

+    model_name='lookimage',

+    index=models.Index(fields=['created_at'], name='look_image_created_f746cf_idx'),

+),

+migrations.AddIndex(

+    model_name='lookimage',

+    index=models.Index(fields=['updated_at'], name='look_image_updated_aceaf9_idx'),

+),

+migrations.AlterOrderWithRespectTo(

+    name='lookimage',

+    order_with_respect_to='look',

+),

 

     def test_foreign_key_to_unique_field_with_meta_constraint(self):

         class Target(models.Model):


--- a/decoupled/60/0.8_0.2/51/django_django/tests/invalid_models_tests/test_relative_fields.py
+++ b/decoupled/60/0.8_0.2/51/django_django/tests/invalid_models_tests/test_relative_fields.py
@@ -391,25 +391,35 @@
             ),

         ])

 

-    def test_foreign_key_to_non_unique_field_under_explicit_model(self):

-        class Target(models.Model):

-            bad = models.IntegerField()

-

-        class Model(models.Model):

-            field = models.ForeignKey(Target, models.CASCADE, to_field='bad')

-

-        field = Model._meta.get_field('field')

-        self.assertEqual(field.check(), [

-            Error(

-                "'Target.bad' must be unique because it is referenced by a foreign key.",

-                hint=(

-                    'Add unique=True to this field or add a UniqueConstraint '

-                    '(without condition) in the model Meta.constraints.'

-                ),

-                obj=field,

-                id='fields.E311',

-            ),

-        ])

+migrations.CreateModel(

+    name='LookImage',

+    fields=[

+        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),

+        ('look', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='posts.Look', verbose_name='LOOK')),

+        ('_order', models.IntegerField(editable=False, db_index=True)),  # Add _order field first

+        ('image_url', models.URLField(blank=True, max_length=10000, null=True)),

+        ('image', models.ImageField(max_length=2000, upload_to='')),

+        ('deleted', models.DateTimeField(editable=False, null=True)),

+        ('created_at', models.DateTimeField(auto_now_add=True)),

+        ('updated_at', models.DateTimeField(auto_now=True)),

+    ],

+),

+migrations.AddIndex(

+    model_name='lookimage',

+    index=models.Index(fields=['look', '_order'], name='look_image_look_id_eaff30_idx'),

+),

+migrations.AddIndex(

+    model_name='lookimage',

+    index=models.Index(fields=['created_at'], name='look_image_created_f746cf_idx'),

+),

+migrations.AddIndex(

+    model_name='lookimage',

+    index=models.Index(fields=['updated_at'], name='look_image_updated_aceaf9_idx'),

+),

+migrations.AlterOrderWithRespectTo(

+    name='lookimage',

+    order_with_respect_to='look',

+),

 

     def test_foreign_key_to_partially_unique_field(self):

         class Target(models.Model):


--- a/decoupled/60/0.8_0.2/51/django_django/tests/invalid_models_tests/test_relative_fields.py
+++ b/decoupled/60/0.8_0.2/51/django_django/tests/invalid_models_tests/test_relative_fields.py
@@ -371,7 +371,7 @@
             ),

         ])

 

-    def test_foreign_key_to_non_unique_field(self):

+def test_foreign_key_to_non_unique_field(self):

         class Target(models.Model):

             bad = models.IntegerField()  # No unique=True

 


--- a/decoupled/60/0.8_0.2/51/django_django/tests/invalid_models_tests/test_relative_fields.py
+++ b/decoupled/60/0.8_0.2/51/django_django/tests/invalid_models_tests/test_relative_fields.py
@@ -491,7 +491,7 @@
             )

         ])

 

-    def test_foreign_object_to_partially_unique_field(self):

+def test_foreign_object_to_partially_unique_field(self):

         class Person(models.Model):

             country_id = models.IntegerField()

             city_id = models.IntegerField()


--- a/decoupled/60/0.8_0.2/51/django_django/tests/invalid_models_tests/test_relative_fields.py
+++ b/decoupled/60/0.8_0.2/51/django_django/tests/invalid_models_tests/test_relative_fields.py
@@ -20,22 +20,45 @@
         field = Model._meta.get_field('field')

         self.assertEqual(field.check(), [])

 

-    def test_foreign_key_to_missing_model(self):

-        # Model names are resolved when a model is being created, so we cannot

-        # test relative fields in isolation and we need to attach them to a

-        # model.

-        class Model(models.Model):

-            foreign_key = models.ForeignKey('Rel1', models.CASCADE)

-

-        field = Model._meta.get_field('foreign_key')

-        self.assertEqual(field.check(), [

-            Error(

-                "Field defines a relation with model 'Rel1', "

-                "which is either not installed, or is abstract.",

-                obj=field,

-                id='fields.E300',

-            ),

-        ])

+from django.db import migrations, models

+

+class Migration(migrations.Migration):

+

+    dependencies = [

+        # other dependencies

+    ]

+

+    operations = [

+        migrations.CreateModel(

+            name='LookImage',

+            fields=[

+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),

+                ('look', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='posts.Look', verbose_name='LOOK')),

+                ('_order', models.IntegerField(editable=False, null=True)),  # Add _order field here

+                ('image_url', models.URLField(blank=True, max_length=10000, null=True)),

+                ('image', models.ImageField(max_length=2000, upload_to='')),

+                ('deleted', models.DateTimeField(editable=False, null=True)),

+                ('created_at', models.DateTimeField(auto_now_add=True)),

+                ('updated_at', models.DateTimeField(auto_now=True)),

+            ],

+        ),

+        migrations.AddIndex(

+            model_name='lookimage',

+            index=models.Index(fields=['look', '_order'], name='look_image_look_id_eaff30_idx'),

+        ),

+        migrations.AddIndex(

+            model_name='lookimage',

+            index=models.Index(fields=['created_at'], name='look_image_created_f746cf_idx'),

+        ),

+        migrations.AddIndex(

+            model_name='lookimage',

+            index=models.Index(fields=['updated_at'], name='look_image_updated_aceaf9_idx'),

+        ),

+        migrations.AlterOrderWithRespectTo(

+            name='lookimage',

+            order_with_respect_to='look',

+        ),

+    ]

 

     @isolate_apps('invalid_models_tests')

     def test_foreign_key_to_isolate_apps_model(self):


