--- a/decoupled/60/0.8_0.2/138/matplotlib_matplotlib/lib/matplotlib/collections.py
+++ b/decoupled/60/0.8_0.2/138/matplotlib_matplotlib/lib/matplotlib/collections.py
@@ -1240,21 +1240,38 @@
 

     @classmethod

     @_api.deprecated("3.7", alternative="fill_between")

-    def span_where(cls, x, ymin, ymax, where, **kwargs):

-        """

-        Return a `.BrokenBarHCollection` that plots horizontal bars from

-        over the regions in *x* where *where* is True.  The bars range

-        on the y-axis from *ymin* to *ymax*

-

-        *kwargs* are passed on to the collection.

-        """

-        xranges = []

-        for ind0, ind1 in cbook.contiguous_regions(where):

-            xslice = x[ind0:ind1]

-            if not len(xslice):

-                continue

-            xranges.append((xslice[0], xslice[-1] - xslice[0]))

-        return BrokenBarHCollection(xranges, [ymin, ymax - ymin], **kwargs)

+import matplotlib.pyplot as pyplot

+import matplotlib.widgets as widgets

+

+def onchanged(values):

+    print("on changed")

+    print(values)

+    # Clear the figure but do not close it

+    pyplot.clf()

+    # Re-add the elements

+    addElements()

+    # Redraw the figure

+    pyplot.draw()

+

+def onclick(e):

+    print("on click")

+    pyplot.clf()

+    addElements()

+    pyplot.draw()

+

+def addElements():

+    ax = pyplot.axes([0.1, 0.45, 0.8, 0.1])

+    global slider

+    slider = widgets.RangeSlider(ax, "Test", valmin=1, valmax=10, valinit=(1, 10))

+    slider.on_changed(onchanged)

+    ax = pyplot.axes([0.1, 0.30, 0.8, 0.1])

+    global button

+    button = widgets.Button(ax, "Test")

+    button.on_clicked(onclick)

+

+addElements()

+

+pyplot.show()

 

 

 @_api.deprecated("3.7")
