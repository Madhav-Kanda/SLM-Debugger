--- a/decoupled/60/0.8_0.2/297/sympy_sympy/sympy/logic/algorithms/dpll.py
+++ b/decoupled/60/0.8_0.2/297/sympy_sympy/sympy/logic/algorithms/dpll.py
@@ -144,30 +144,7 @@
 

 

 def pl_true_int_repr(clause, model={}):

-    """

-    Lightweight version of pl_true.

-    Argument clause represents the set of args of an Or clause. This is used

-    inside dpll_int_repr, it is not meant to be used directly.

-

-    >>> from sympy.logic.algorithms.dpll import pl_true_int_repr

-    >>> pl_true_int_repr({1, 2}, {1: False})

-    >>> pl_true_int_repr({1, 2}, {1: False, 2: False})

-    False

-

-    """

-    result = False

-    for lit in clause:

-        if lit < 0:

-            p = model.get(-lit)

-            if p is not None:

-                p = not p

-        else:

-            p = model.get(lit)

-        if p is True:

-            return True

-        elif p is None:

-            result = None

-    return result

+    ...

 

 

 def unit_propagate(clauses, symbol):
