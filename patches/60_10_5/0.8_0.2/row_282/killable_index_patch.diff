--- a/decoupled/60/0.8_0.2/282/sympy_sympy/sympy/functions/special/tensor_functions.py
+++ b/decoupled/60/0.8_0.2/282/sympy_sympy/sympy/functions/special/tensor_functions.py
@@ -408,44 +408,46 @@
             return self.args[0]

 

     @property

-    def killable_index(self):

-        """

-        Returns the index which is preferred to substitute in the final

-        expression.

-

-        Explanation

-        ===========

-

-        The index to substitute is the index with less information regarding

-        fermi level. If indices contain the same information, 'a' is preferred

-        before 'b'.

-

-        Examples

-        ========

-

-        >>> from sympy.functions.special.tensor_functions import KroneckerDelta

-        >>> from sympy import Symbol

-        >>> a = Symbol('a', above_fermi=True)

-        >>> i = Symbol('i', below_fermi=True)

-        >>> j = Symbol('j', below_fermi=True)

-        >>> p = Symbol('p')

-        >>> KroneckerDelta(p, i).killable_index

-        p

-        >>> KroneckerDelta(p, a).killable_index

-        p

-        >>> KroneckerDelta(i, j).killable_index

-        j

-

-        See Also

-        ========

-

-        preferred_index

-

-        """

-        if self._get_preferred_index():

-            return self.args[0]

-        else:

-            return self.args[1]

+from sympy import simplify

+

+def killable_index(self):

+    """

+    Returns the index which is preferred to substitute in the final

+    expression.

+

+    Explanation

+    ===========

+

+    The index to substitute is the index with less information regarding

+    fermi level. If indices contain the same information, 'a' is preferred

+    before 'b'.

+

+    Examples

+    ========

+

+    >>> from sympy.functions.special.tensor_functions import KroneckerDelta

+    >>> from sympy import Symbol

+    >>> a = Symbol('a', above_fermi=True)

+    >>> i = Symbol('i', below_fermi=True)

+    >>> j = Symbol('j', below_fermi=True)

+    >>> p = Symbol('p')

+    >>> KroneckerDelta(p, i).killable_index

+    p

+    >>> KroneckerDelta(p, a).killable_index

+    p

+    >>> KroneckerDelta(i, j).killable_index

+    j

+

+    See Also

+    ========

+

+    preferred_index

+

+    """

+    if self._get_preferred_index():

+        return simplify(self.args[0])

+    else:

+        return simplify(self.args[1])

 

     def _get_preferred_index(self):

         """
