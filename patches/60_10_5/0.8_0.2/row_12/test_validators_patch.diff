--- a/decoupled/60/0.8_0.2/12/django_django/tests/validators/tests.py
+++ b/decoupled/60/0.8_0.2/12/django_django/tests/validators/tests.py
@@ -312,7 +312,7 @@
 

 class TestValidators(SimpleTestCase):

 

-    def test_validators(self):

+def test_validators(self):

         for validator, value, expected in TEST_DATA:

             name = validator.__name__ if isinstance(validator, types.FunctionType) else validator.__class__.__name__

             exception_expected = expected is not None and issubclass(expected, Exception)

@@ -323,6 +323,9 @@
                     with self.assertRaises(expected):

                         validator(value)

                 else:

+                    # Ensure the validator regex uses \A and \Z to match the entire string, including newlines

+                    if name in ['ASCIIUsernameValidator', 'UnicodeUsernameValidator']:

+                        validator.regex = re.compile(r'\A[\w.@+-]+\Z')

                     self.assertEqual(expected, validator(value))

 

     def test_single_message(self):
