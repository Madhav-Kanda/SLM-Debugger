--- a/decoupled/60/0.8_0.2/81/django_django/django/contrib/admin/options.py
+++ b/decoupled/60/0.8_0.2/81/django_django/django/contrib/admin/options.py
@@ -924,32 +924,16 @@
             choices.append(choice)

         return choices

 

-    def get_action(self, action):

-        """

-        Return a given action from a parameter, which can either be a callable,

-        or the name of a method on the ModelAdmin.  Return is a tuple of

-        (callable, name, description).

-        """

-        # If the action is a callable, just use it.

-        if callable(action):

-            func = action

-            action = action.__name__

-

-        # Next, look for a method. Grab it off self.__class__ to get an unbound

-        # method instead of a bound one; this ensures that the calling

-        # conventions are the same for functions and methods.

-        elif hasattr(self.__class__, action):

-            func = getattr(self.__class__, action)

-

-        # Finally, look for a named method on the admin site

-        else:

-            try:

-                func = self.admin_site.get_action(action)

-            except KeyError:

-                return None

-

-        description = self._get_action_description(func, action)

-        return func, action, description

+def get_admin_url(self, obj, url_name):

+    """

+    Return the admin URL for the given object and URL name.

+    """

+    url = reverse(

+        url_name,

+        args=[quote(obj.pk)],

+        current_app=self.admin_site.name

+    )

+    return url

 

     def get_list_display(self, request):

         """
