--- a/decoupled/60/0.8_0.2/81/django_django/tests/admin_custom_urls/tests.py
+++ b/decoupled/60/0.8_0.2/81/django_django/tests/admin_custom_urls/tests.py
@@ -66,22 +66,23 @@
         response = self.client.post(reverse('admin_custom_urls:admin_custom_urls_action_add'), post_data)

         self.assertContains(response, 'Action added through a popup')

 

-    def test_admin_URLs_no_clash(self):

-        # Should get the change_view for model instance with PK 'add', not show

-        # the add_view

-        url = reverse('admin_custom_urls:%s_action_change' % Action._meta.app_label, args=(quote('add'),))

-        response = self.client.get(url)

-        self.assertContains(response, 'Change action')

+def test_admin_URLs_no_clash(self):

+    # Should get the change_view for model instance with PK 'add', not show

+    # the add_view

+    url = reverse('admin_custom_urls:%s_action_change' % Action._meta.app_label, args=(quote('add'),), current_app='my_custom_admin_site')

+    response = self.client.get(url)

+    self.assertContains(response, 'Change action')

 

-        # Should correctly get the change_view for the model instance with the

-        # funny-looking PK (the one with a 'path/to/html/document.html' value)

-        url = reverse(

-            'admin_custom_urls:%s_action_change' % Action._meta.app_label,

-            args=(quote("path/to/html/document.html"),)

-        )

-        response = self.client.get(url)

-        self.assertContains(response, 'Change action')

-        self.assertContains(response, 'value="path/to/html/document.html"')

+    # Should correctly get the change_view for the model instance with the

+    # funny-looking PK (the one with a 'path/to/html/document.html' value)

+    url = reverse(

+        'admin_custom_urls:%s_action_change' % Action._meta.app_label,

+        args=(quote("path/to/html/document.html"),),

+        current_app='my_custom_admin_site'

+    )

+    response = self.client.get(url)

+    self.assertContains(response, 'Change action')

+    self.assertContains(response, 'value="path/to/html/document.html"')

 

     def test_post_save_add_redirect(self):

         """
