--- a/decoupled/60/0.8_0.2/214/sphinx-doc_sphinx/sphinx/extension.py
+++ b/decoupled/60/0.8_0.2/214/sphinx-doc_sphinx/sphinx/extension.py
@@ -23,21 +23,41 @@
 

 

 class Extension:

-    def __init__(self, name: str, module: Any, **kwargs: Any) -> None:

-        self.name = name

-        self.module = module

-        self.metadata = kwargs

-        self.version = kwargs.pop('version', 'unknown version')

+def __init__(self, name: str, module: Any, **kwargs: Any) -> None:

+    """

+    Initialize the object with the given parameters.

 

-        # The extension supports parallel read or not.  The default value

-        # is ``None``.  It means the extension does not tell the status.

-        # It will be warned on parallel reading.

-        self.parallel_read_safe = kwargs.pop('parallel_read_safe', None)

+    :param name: The name of the object.

+    :type name: str

+    :param module: The module associated with the object.

+    :type module: Any

+    :param kwargs: Additional keyword arguments.

+    :type kwargs: Any

 

-        # The extension supports parallel write or not.  The default value

-        # is ``True``.  Sphinx writes parallelly documents even if

-        # the extension does not tell its status.

-        self.parallel_write_safe = kwargs.pop('parallel_write_safe', True)

+    :ivar name: The name of the object.

+    :ivar module: The module associated with the object.

+    :ivar metadata: Metadata associated with the object.

+    :ivar version: The version of the object.

+    :type version: str

+    :ivar parallel_read_safe: Whether the extension supports parallel read.

+    :type parallel_read_safe: Optional[bool]

+    :ivar parallel_write_safe: Whether the extension supports parallel write.

+    :type parallel_write_safe: bool

+    """

+    self.name = name

+    self.module = module

+    self.metadata = kwargs

+    self.version = kwargs.pop('version', 'unknown version')

+

+    # The extension supports parallel read or not.  The default value

+    # is ``None``.  It means the extension does not tell the status.

+    # It will be warned on parallel reading.

+    self.parallel_read_safe = kwargs.pop('parallel_read_safe', None)

+

+    # The extension supports parallel write or not.  The default value

+    # is ``True``.  Sphinx writes parallelly documents even if

+    # the extension does not tell its status.

+    self.parallel_write_safe = kwargs.pop('parallel_write_safe', True)

 

 

 def verify_needs_extensions(app: "Sphinx", config: Config) -> None:
