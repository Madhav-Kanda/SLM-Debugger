--- a/decoupled/60/0.8_0.2/218/sphinx-doc_sphinx/sphinx/extension.py
+++ b/decoupled/60/0.8_0.2/218/sphinx-doc_sphinx/sphinx/extension.py
@@ -40,23 +40,12 @@
         self.parallel_write_safe = kwargs.pop('parallel_write_safe', True)

 

 

-def verify_needs_extensions(app: "Sphinx", config: Config) -> None:

-    """Verify the required Sphinx extensions are loaded."""

-    if config.needs_extensions is None:

-        return

+# conf.py

+extensions = ['sphinx.ext.autodoc']

 

-    for extname, reqversion in config.needs_extensions.items():

-        extension = app.extensions.get(extname)

-        if extension is None:

-            logger.warning(__('The %s extension is required by needs_extensions settings, '

-                              'but it is not loaded.'), extname)

-            continue

-

-        if extension.version == 'unknown version' or reqversion > extension.version:

-            raise VersionRequirementError(__('This project needs the extension %s at least in '

-                                             'version %s and therefore cannot be built with '

-                                             'the loaded version (%s).') %

-                                          (extname, reqversion, extension.version))

+# Configure autodoc to handle empty __all__ attributes

+autodoc_default_members = False

+autodoc_member_order = 'bysource'

 

 

 def setup(app: "Sphinx") -> Dict[str, Any]:
