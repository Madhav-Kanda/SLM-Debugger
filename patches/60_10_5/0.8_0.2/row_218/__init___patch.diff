--- a/decoupled/60/0.8_0.2/218/sphinx-doc_sphinx/doc/usage/extensions/example_numpy.py
+++ b/decoupled/60/0.8_0.2/218/sphinx-doc_sphinx/doc/usage/extensions/example_numpy.py
@@ -242,39 +242,39 @@
 

     """

 

-    def __init__(self, param1, param2, param3):

-        """Example of docstring on the __init__ method.

-

-        The __init__ method may be documented in either the class level

-        docstring, or as a docstring on the __init__ method itself.

-

-        Either form is acceptable, but the two should not be mixed. Choose one

-        convention to document the __init__ method and be consistent with it.

-

-        Note

-        ----

-        Do not include the `self` parameter in the ``Parameters`` section.

-

-        Parameters

-        ----------

-        param1 : str

-            Description of `param1`.

-        param2 : list(str)

-            Description of `param2`. Multiple

-            lines are supported.

-        param3 : :obj:`int`, optional

-            Description of `param3`.

-

-        """

-        self.attr1 = param1

-        self.attr2 = param2

-        self.attr3 = param3  #: Doc comment *inline* with attribute

-

-        #: list(str): Doc comment *before* attribute, with type specified

-        self.attr4 = ["attr4"]

-

-        self.attr5 = None

-        """str: Docstring *after* attribute, with type specified."""

+def __init__(self, param1, param2, param3):

+    """Example of docstring on the __init__ method.

+

+    The __init__ method may be documented in either the class level

+    docstring, or as a docstring on the __init__ method itself.

+

+    Either form is acceptable, but the two should not be mixed. Choose one

+    convention to document the __init__ method and be consistent with it.

+

+    Note

+    ----

+    Do not include the `self` parameter in the ``Parameters`` section.

+

+    Parameters

+    ----------

+    param1 : str

+        Description of `param1`.

+    param2 : list(str)

+        Description of `param2`. Multiple

+        lines are supported.

+    param3 : :obj:`int`, optional

+        Description of `param3`.

+

+    """

+    self.attr1 = param1

+    self.attr2 = param2

+    self.attr3 = param3  #: Doc comment *inline* with attribute

+

+    #: list(str): Doc comment *before* attribute, with type specified

+    self.attr4 = ["attr4"]

+

+    self.attr5 = None

+    """str: Docstring *after* attribute, with type specified."""

 

     @property

     def readonly_property(self):
