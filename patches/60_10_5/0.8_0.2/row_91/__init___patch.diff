--- a/decoupled/60/0.8_0.2/91/django_django/django/conf/__init__.py
+++ b/decoupled/60/0.8_0.2/91/django_django/django/conf/__init__.py
@@ -172,7 +172,7 @@
 

 

 class Settings:

-    def __init__(self, settings_module):

+def __init__(self, settings_module):

         # update this dict from global settings (but only for ALL_CAPS settings)

         for setting in dir(global_settings):

             if setting.isupper():

@@ -195,11 +195,18 @@
             if setting.isupper():

                 setting_value = getattr(mod, setting)

 

-                if (setting in tuple_settings and

+                # Ensure TEMPLATE_DIRS is treated as a list, not a string

+                if setting == "TEMPLATE_DIRS":

+                    if not isinstance(setting_value, (list, tuple)):

+                        raise ImproperlyConfigured("The TEMPLATE_DIRS setting must be a list or a tuple.")

+                    setattr(self, setting, setting_value)

+                    self._explicit_settings.add(setting)

+                elif (setting in tuple_settings and

                         not isinstance(setting_value, (list, tuple))):

                     raise ImproperlyConfigured("The %s setting must be a list or a tuple." % setting)

-                setattr(self, setting, setting_value)

-                self._explicit_settings.add(setting)

+                else:

+                    setattr(self, setting, setting_value)

+                    self._explicit_settings.add(setting)

 

         if self.USE_TZ is False and not self.is_overridden('USE_TZ'):

             warnings.warn(
