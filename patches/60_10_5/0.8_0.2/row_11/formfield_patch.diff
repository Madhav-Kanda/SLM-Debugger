--- a/decoupled/60/0.8_0.2/11/django_django/django/db/models/fields/related.py
+++ b/decoupled/60/0.8_0.2/11/django_django/django/db/models/fields/related.py
@@ -398,23 +398,16 @@
             return self.remote_field.limit_choices_to()

         return self.remote_field.limit_choices_to

 

+from django.db import models

+

+class MyDurationField(models.DurationField):

     def formfield(self, **kwargs):

-        """

-        Pass ``limit_choices_to`` to the field being constructed.

-

-        Only passes it if there is a type that supports related fields.

-        This is a similar strategy used to pass the ``queryset`` to the field

-        being constructed.

-        """

-        defaults = {}

-        if hasattr(self.remote_field, 'get_related_field'):

-            # If this is a callable, do not invoke it here. Just pass

-            # it in the defaults for when the form class will later be

-            # instantiated.

-            limit_choices_to = self.remote_field.limit_choices_to

-            defaults.update({

-                'limit_choices_to': limit_choices_to,

-            })

+        defaults = {

+            'help_text': 'Enter a duration in the format [DD] [[HH:]MM:]ss[.uuuuuu]',

+            'error_messages': {

+                'invalid': 'Enter a valid duration in the format [DD] [[HH:]MM:]ss[.uuuuuu].'

+            }

+        }

         defaults.update(kwargs)

         return super().formfield(**defaults)

 
