--- a/decoupled/60/0.8_0.2/167/pytest-dev_pytest/src/_pytest/config/__init__.py
+++ b/decoupled/60/0.8_0.2/167/pytest-dev_pytest/src/_pytest/config/__init__.py
@@ -893,6 +893,39 @@
                 new_package_files.append(new_fn)

         if new_package_files:

             yield from _iter_rewritable_modules(new_package_files)

+

+def _read_first_line_of_file(file_path: str) -> str:

+    """Read the first line of a file."""

+    with open(file_path, 'r', encoding='utf-8') as file:

+        return file.readline().strip()

+

+def _is_docstring(line: str) -> bool:

+    """Check if the line is a docstring."""

+    return line.startswith('"""') or line.startswith("'''")

+

+def _rewritable_module_names(package_files: Iterable[str]) -> Iterator[str]:

+    """Given an iterable of file names in a source distribution, return the "names" that should

+    be marked for assertion rewrite.

+

+    This function ensures that the first line of the file is not a docstring before processing.

+    """

+    package_files = list(package_files)

+    seen_some = False

+    for fn in package_files:

+        is_simple_module = "/" not in fn and fn.endswith(".py")

+        is_package = fn.count("/") == 1 and fn.endswith("__init__.py")

+        if is_simple_module:

+            module_name, _ = os.path.splitext(fn)

+            # we ignore "setup.py" at the root of the distribution

+            # as well as editable installation finder modules made by setuptools

+            if module_name != "setup" and not module_name.startswith("__editable__"):

+                seen_some = True

+                first_line = _read_first_line_of_file(fn)

+                if not _is_docstring(first_line):

+                    yield module_name

+        elif is_package:

+            package_name = os.path.dirname(fn)

+            seen_some = True

 

 

 @final
