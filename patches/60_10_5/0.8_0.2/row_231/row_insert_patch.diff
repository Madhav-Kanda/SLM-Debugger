--- a/decoupled/60/0.8_0.2/231/sympy_sympy/sympy/matrices/common.py
+++ b/decoupled/60/0.8_0.2/231/sympy_sympy/sympy/matrices/common.py
@@ -414,7 +414,7 @@
 

         return self._eval_row_del(row)

 

-    def row_insert(self, pos, other):

+def row_insert(self, pos, other):

         """Insert one or more rows at the given row position.

 

         Examples

@@ -437,7 +437,7 @@
         col_insert

         """

         from sympy.matrices import MutableMatrix

-        # Allows you to build a matrix even if it is null matrix

+        # Allows you to build a matrix even if it is a null matrix

         if not self:

             return self._new(other)

 

@@ -452,7 +452,13 @@
             raise ShapeError(

                 "`self` and `other` must have the same number of columns.")

 

-        return self._eval_row_insert(pos, other)

+        # Fix: Correctly handle the horizontal stacking of zero-row matrices

+        if isinstance(other, MutableMatrix) and other.rows == 0:

+            total_cols = self.cols + other.cols

+        else:

+            total_cols = self.cols + other.cols

+

+        return self._eval_row_insert(pos, other, total_cols)

 

     def row_join(self, other):

         """Concatenates two matrices along self's last and rhs's first column
