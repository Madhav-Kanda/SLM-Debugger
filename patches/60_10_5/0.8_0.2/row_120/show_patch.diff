--- a/decoupled/60/0.8_0.2/120/matplotlib_matplotlib/lib/matplotlib/figure.py
+++ b/decoupled/60/0.8_0.2/120/matplotlib_matplotlib/lib/matplotlib/figure.py
@@ -2264,42 +2264,45 @@
             from matplotlib.backends import backend_webagg

             return backend_webagg.ipython_inline_display(self)

 

-    def show(self, warn=True):

-        """

-        If using a GUI backend with pyplot, display the figure window.

-

-        If the figure was not created using `~.pyplot.figure`, it will lack

-        a `~.backend_bases.FigureManagerBase`, and this method will raise an

-        AttributeError.

-

-        .. warning::

-

-            This does not manage an GUI event loop. Consequently, the figure

-            may only be shown briefly or not shown at all if you or your

-            environment are not managing an event loop.

-

-            Proper use cases for `.Figure.show` include running this from a

-            GUI application or an IPython shell.

-

-            If you're running a pure python shell or executing a non-GUI

-            python script, you should use `matplotlib.pyplot.show` instead,

-            which takes care of managing the event loop for you.

-

-        Parameters

-        ----------

-        warn : bool, default: True

-            If ``True`` and we are not running headless (i.e. on Linux with an

-            unset DISPLAY), issue warning when called on a non-GUI backend.

-        """

-        if self.canvas.manager is None:

-            raise AttributeError(

-                "Figure.show works only for figures managed by pyplot, "

-                "normally created by pyplot.figure()")

-        try:

-            self.canvas.manager.show()

-        except NonGuiException as exc:

-            if warn:

-                _api.warn_external(str(exc))

+def show(self, warn=True):

+    """

+    If using a GUI backend with pyplot, display the figure window.

+

+    If the figure was not created using `~.pyplot.figure`, it will lack

+    a `~.backend_bases.FigureManagerBase`, and this method will raise an

+    AttributeError.

+

+    .. warning::

+

+        This does not manage an GUI event loop. Consequently, the figure

+        may only be shown briefly or not shown at all if you or your

+        environment are not managing an event loop.

+

+        Proper use cases for `.Figure.show` include running this from a

+        GUI application or an IPython shell.

+

+        If you're running a pure python shell or executing a non-GUI

+        python script, you should use `matplotlib.pyplot.show` instead,

+        which takes care of managing the event loop for you.

+

+    Parameters

+    ----------

+    warn : bool, default: True

+        If ``True`` and we are not running headless (i.e. on Linux with an

+        unset DISPLAY), issue warning when called on a non-GUI backend.

+    """

+    # Add version_info or LooseVersion instance for easy version comparison

+    version_info = tuple(map(int, self.__version__.split('.')))

+    

+    if self.canvas.manager is None:

+        raise AttributeError(

+            "Figure.show works only for figures managed by pyplot, "

+            "normally created by pyplot.figure()")

+    try:

+        self.canvas.manager.show()

+    except NonGuiException as exc:

+        if warn:

+            _api.warn_external(str(exc))

 

     @property

     def axes(self):
