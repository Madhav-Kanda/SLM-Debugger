--- a/decoupled/60/0.8_0.2/130/matplotlib_matplotlib/lib/matplotlib/figure.py
+++ b/decoupled/60/0.8_0.2/130/matplotlib_matplotlib/lib/matplotlib/figure.py
@@ -1280,47 +1280,49 @@
         self.stale = True

         return cb

 

-    def subplots_adjust(self, left=None, bottom=None, right=None, top=None,

-                        wspace=None, hspace=None):

-        """

-        Adjust the subplot layout parameters.

-

-        Unset parameters are left unmodified; initial values are given by

-        :rc:`figure.subplot.[name]`.

-

-        Parameters

-        ----------

-        left : float, optional

-            The position of the left edge of the subplots,

-            as a fraction of the figure width.

-        right : float, optional

-            The position of the right edge of the subplots,

-            as a fraction of the figure width.

-        bottom : float, optional

-            The position of the bottom edge of the subplots,

-            as a fraction of the figure height.

-        top : float, optional

-            The position of the top edge of the subplots,

-            as a fraction of the figure height.

-        wspace : float, optional

-            The width of the padding between subplots,

-            as a fraction of the average Axes width.

-        hspace : float, optional

-            The height of the padding between subplots,

-            as a fraction of the average Axes height.

-        """

-        if (self.get_layout_engine() is not None and

-                not self.get_layout_engine().adjust_compatible):

-            _api.warn_external(

-                "This figure was using a layout engine that is "

-                "incompatible with subplots_adjust and/or tight_layout; "

-                "not calling subplots_adjust.")

-            return

-        self.subplotpars.update(left, bottom, right, top, wspace, hspace)

-        for ax in self.axes:

-            if hasattr(ax, 'get_subplotspec'):

-                ax._set_position(ax.get_subplotspec().get_position(self))

-        self.stale = True

+def subplots_adjust(self, left=None, bottom=None, right=None, top=None,

+                    wspace=None, hspace=None):

+    """

+    Adjust the subplot layout parameters.

+

+    Unset parameters are left unmodified; initial values are given by

+    :rc:`figure.subplot.[name]`.

+

+    Parameters

+    ----------

+    left : float, optional

+        The position of the left edge of the subplots,

+        as a fraction of the figure width.

+    right : float, optional

+        The position of the right edge of the subplots,

+        as a fraction of the figure width.

+    bottom : float, optional

+        The position of the bottom edge of the subplots,

+        as a fraction of the figure height.

+    top : float, optional

+        The position of the top edge of the subplots,

+        as a fraction of the figure height.

+    wspace : float, optional

+        The width of the padding between subplots,

+        as a fraction of the average Axes width.

+    hspace : float, optional

+        The height of the padding between subplots,

+        as a fraction of the average Axes height.

+    """

+    # Check if constrained_layout is True or if the layout engine is not None and not adjust_compatible

+    if (self.get_layout_engine() is not None and

+            (self.get_layout_engine().adjust_compatible or

+             self.get_layout_engine().constrained_layout)):

+        _api.warn_external(

+            "This figure was using a layout engine that is "

+            "incompatible with subplots_adjust and/or tight_layout; "

+            "not calling subplots_adjust.")

+        return

+    self.subplotpars.update(left, bottom, right, top, wspace, hspace)

+    for ax in self.axes:

+        if hasattr(ax, 'get_subplotspec'):

+            ax._set_position(ax.get_subplotspec().get_position(self))

+    self.stale = True

 

     def align_xlabels(self, axs=None):

         """
