--- a/decoupled/60/0.8_0.2/76/django_django/django/db/models/fields/related_descriptors.py
+++ b/decoupled/60/0.8_0.2/76/django_django/django/db/models/fields/related_descriptors.py
@@ -117,7 +117,7 @@
     def get_queryset(self, **hints):

         return self.field.remote_field.model._base_manager.db_manager(hints=hints).all()

 

-    def get_prefetch_queryset(self, instances, queryset=None):

+def get_prefetch_queryset(self, instances, queryset=None):

         if queryset is None:

             queryset = self.get_queryset()

         queryset._add_hints(instance=instances[0])

@@ -146,7 +146,15 @@
             for rel_obj in queryset:

                 instance = instances_dict[rel_obj_attr(rel_obj)]

                 remote_field.set_cached_value(rel_obj, instance)

+        

+        # Apply defer() to fields that were not selected by only()

+        if self.deferred_fields:

+            queryset = queryset.defer(*self.deferred_fields)

+        

         return queryset, rel_obj_attr, instance_attr, True, self.field.get_cache_name(), False

+

+    def set_deferred_fields(self, deferred_fields):

+        self.deferred_fields = deferred_fields

 

     def get_object(self, instance):

         qs = self.get_queryset(instance=instance)
