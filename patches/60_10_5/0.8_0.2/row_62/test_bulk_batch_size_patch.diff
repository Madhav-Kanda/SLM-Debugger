--- a/decoupled/60/0.8_0.2/62/django_django/tests/backends/oracle/test_operations.py
+++ b/decoupled/60/0.8_0.2/62/django_django/tests/backends/oracle/test_operations.py
@@ -15,19 +15,19 @@
         seq_name = connection.ops._get_no_autofield_sequence_name('schema_authorwithevenlongee869')

         self.assertEqual(seq_name, 'SCHEMA_AUTHORWITHEVENLOB0B8_SQ')

 

-    def test_bulk_batch_size(self):

-        # Oracle restricts the number of parameters in a query.

-        objects = range(2**16)

-        self.assertEqual(connection.ops.bulk_batch_size([], objects), len(objects))

-        # Each field is a parameter for each object.

-        self.assertEqual(

-            connection.ops.bulk_batch_size(['id'], objects),

-            connection.features.max_query_params,

-        )

-        self.assertEqual(

-            connection.ops.bulk_batch_size(['id', 'other'], objects),

-            connection.features.max_query_params // 2,

-        )

+def test_bulk_batch_size(self):

+    # Oracle restricts the number of parameters in a query.

+    objects = range(2**16)

+    self.assertEqual(connection.ops.bulk_batch_size([], objects), len(objects))

+    # Each field is a parameter for each object.

+    self.assertEqual(

+        connection.ops.bulk_batch_size(['id'], objects),

+        connection.features.max_query_params,

+    )

+    self.assertEqual(

+        connection.ops.bulk_batch_size(['id', 'other'], objects),

+        connection.features.max_query_params // 2,

+    )

 

     def test_sql_flush(self):

         statements = connection.ops.sql_flush(
