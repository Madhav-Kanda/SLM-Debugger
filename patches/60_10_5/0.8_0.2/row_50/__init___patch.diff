--- a/decoupled/60/0.8_0.2/50/django_django/django/dispatch/dispatcher.py
+++ b/decoupled/60/0.8_0.2/50/django_django/django/dispatch/dispatcher.py
@@ -27,28 +27,42 @@
         receivers

             { receiverkey (id) : weakref(receiver) }

     """

-    def __init__(self, providing_args=None, use_caching=False):

-        """

-        Create a new signal.

-        """

-        self.receivers = []

-        if providing_args is not None:

-            warnings.warn(

-                'The providing_args argument is deprecated. As it is purely '

-                'documentational, it has no replacement. If you rely on this '

-                'argument as documentation, you can move the text to a code '

-                'comment or docstring.',

-                RemovedInDjango40Warning, stacklevel=2,

-            )

-        self.lock = threading.Lock()

-        self.use_caching = use_caching

-        # For convenience we create empty caches even if they are not used.

-        # A note about caching: if use_caching is defined, then for each

-        # distinct sender we cache the receivers that sender has in

-        # 'sender_receivers_cache'. The cache is cleaned when .connect() or

-        # .disconnect() is called and populated on send().

-        self.sender_receivers_cache = weakref.WeakKeyDictionary() if use_caching else {}

-        self._dead_receivers = False

+def add_item(self, title, link, description, pubdate, comments=None, author=None, author_email=None, author_link=None, categories=None, unique_id=None, unique_id_is_permalink=False, enclosure=None, source=None, extra_kwargs=None):

+    """

+    Add an item to the feed.

+    

+    :param comments: A URL to the comments for this item.

+    """

+    item = {

+        'title': title,

+        'link': link,

+        'description': description,

+        'pubdate': pubdate,

+        'unique_id': unique_id,

+        'unique_id_is_permalink': unique_id_is_permalink,

+        'enclosure': enclosure,

+        'source': source,

+    }

+    

+    if comments:

+        item['comments'] = comments

+    

+    if author:

+        item['author'] = author

+    

+    if author_email:

+        item['author_email'] = author_email

+    

+    if author_link:

+        item['author_link'] = author_link

+    

+    if categories:

+        item['categories'] = categories

+    

+    if extra_kwargs:

+        item.update(extra_kwargs)

+    

+    self.items.append(item)

 

     def connect(self, receiver, sender=None, weak=True, dispatch_uid=None):

         """
