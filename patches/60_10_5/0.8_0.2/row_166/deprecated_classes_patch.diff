--- a/decoupled/60/0.8_0.2/166/pylint-dev_pylint/pylint/checkers/deprecated.py
+++ b/decoupled/60/0.8_0.2/166/pylint-dev_pylint/pylint/checkers/deprecated.py
@@ -177,17 +177,17 @@
         """

         return ()

 

-    def deprecated_classes(self, module: str) -> Iterable[str]:

-        """Callback returning the deprecated classes of module.

-

-        Args:

-            module (str): name of module checked for deprecated classes

-

-        Returns:

-            collections.abc.Container of deprecated class names.

-        """

-        # pylint: disable=unused-argument

-        return ()

+def deprecated_classes(self, module: str) -> Iterable[str]:

+    """Callback returning the deprecated classes of module.

+

+    Args:

+        module (str): name of module checked for deprecated classes

+

+    Returns:

+        collections.abc.Container of deprecated class names.

+    """

+    # pylint: disable=unused-argument

+    return ()

 

     def check_deprecated_module(self, node: nodes.Import, mod_path: str | None) -> None:

         """Checks if the module is deprecated."""
