--- a/decoupled/60/0.8_0.2/242/sympy_sympy/sympy/printing/latex.py
+++ b/decoupled/60/0.8_0.2/242/sympy_sympy/sympy/printing/latex.py
@@ -2154,64 +2154,7 @@
     >>> print(latex(3*x**2/y))

     \frac{3 x^{2}}{y}

     >>> print(latex(3*x**2/y, fold_short_frac=True))

-    3 x^{2} / y

-

-    long_frac_ratio: The allowed ratio of the width of the numerator to the

-    width of the denominator before we start breaking off long fractions.

-    The default value is 2.

-

-    >>> print(latex(Integral(r, r)/2/pi, long_frac_ratio=2))

-    \frac{\int r\, dr}{2 \pi}

-    >>> print(latex(Integral(r, r)/2/pi, long_frac_ratio=0))

-    \frac{1}{2 \pi} \int r\, dr

-

-    mul_symbol: The symbol to use for multiplication. Can be one of None,

-    "ldot", "dot", or "times".

-

-    >>> print(latex((2*tau)**sin(Rational(7,2)), mul_symbol="times"))

-    \left(2 \times \tau\right)^{\sin{\left (\frac{7}{2} \right )}}

-

-    inv_trig_style: How inverse trig functions should be displayed. Can be one

-    of "abbreviated", "full", or "power". Defaults to "abbreviated".

-

-    >>> print(latex(asin(Rational(7,2))))

-    \operatorname{asin}{\left (\frac{7}{2} \right )}

-    >>> print(latex(asin(Rational(7,2)), inv_trig_style="full"))

-    \arcsin{\left (\frac{7}{2} \right )}

-    >>> print(latex(asin(Rational(7,2)), inv_trig_style="power"))

-    \sin^{-1}{\left (\frac{7}{2} \right )}

-

-    mat_str: Which matrix environment string to emit. "smallmatrix", "matrix",

-    "array", etc. Defaults to "smallmatrix" for inline mode, "matrix" for

-    matrices of no more than 10 columns, and "array" otherwise.

-

-    >>> print(latex(Matrix(2, 1, [x, y])))

-    \left[\begin{matrix}x\\y\end{matrix}\right]

-

-    >>> print(latex(Matrix(2, 1, [x, y]), mat_str = "array"))

-    \left[\begin{array}{c}x\\y\end{array}\right]

-

-    mat_delim: The delimiter to wrap around matrices. Can be one of "[", "(",

-    or the empty string. Defaults to "[".

-

-    >>> print(latex(Matrix(2, 1, [x, y]), mat_delim="("))

-    \left(\begin{matrix}x\\y\end{matrix}\right)

-

-    symbol_names: Dictionary of symbols and the custom strings they should be

-    emitted as.

-

-    >>> print(latex(x**2, symbol_names={x:'x_i'}))

-    x_i^{2}

-

-    ``latex`` also supports the builtin container types list, tuple, and

-    dictionary.

-

-    >>> print(latex([2/x, y], mode='inline'))

-    $\left [ 2 / x, \quad y\right ]$

-

-    """

-

-    return LatexPrinter(settings).doprint(expr)

+    3 x^{2} /

 

 

 def print_latex(expr, **settings):
