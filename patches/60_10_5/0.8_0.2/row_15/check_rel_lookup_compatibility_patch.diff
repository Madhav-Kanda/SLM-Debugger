--- a/decoupled/60/0.8_0.2/15/django_django/django/db/models/query_utils.py
+++ b/decoupled/60/0.8_0.2/15/django_django/django/db/models/query_utils.py
@@ -280,6 +280,7 @@
             opts.concrete_model in model._meta.get_parent_list() or

             model in opts.get_parent_list()

         )

+    

     # If the field is a primary key, then doing a query against the field's

     # model is ok, too. Consider the case:

     # class Restaurant(models.Model):

@@ -289,9 +290,12 @@
     # give Place's opts as the target opts, but Restaurant isn't compatible

     # with that. This logic applies only to primary keys, as when doing __in=qs,

     # we are going to turn this into __in=qs.values('pk') later on.

+    # Additionally, for proxy models, we need to ensure that the proxy model

+    # is treated as the concrete model for permission checks.

     return (

         check(target_opts) or

-        (getattr(field, 'primary_key', False) and check(field.model._meta))

+        (getattr(field, 'primary_key', False) and check(field.model._meta)) or

+        (model._meta.is_proxy and model._meta.concrete_model == target_opts.concrete_model)

     )

 

 
