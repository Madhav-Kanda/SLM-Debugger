--- a/decoupled/60/0.8_0.2/181/pytest-dev_pytest/src/_pytest/pytester.py
+++ b/decoupled/60/0.8_0.2/181/pytest-dev_pytest/src/_pytest/pytester.py
@@ -780,11 +780,16 @@
         assert ret is not None

         return ret

 

+import os

+import re

+from pathlib import Path

+

+class Pytester:

     def makefile(self, ext: str, *args: str, **kwargs: str) -> Path:

         r"""Create new text file(s) in the test directory.

 

         :param str ext:

-            The extension the file(s) should use, including the dot, e.g. `.py`.

+            The extension the file(s) should use, e.g. `.py`.

         :param args:

             All args are treated as strings and joined using newlines.

             The result is written as contents to the file.  The name of the

@@ -808,7 +813,14 @@
             filename = pytester.path.joinpath("foo.bin")

             filename.write_bytes(b"...")

         """

-        return self._makefile(ext, args, kwargs)

+        # Replace illegal characters in the username with a safe character

+        safe_username = re.sub(r'[\\/:*?"<>|]', '_', os.getlogin())

+        

+        # Use the safe username to create the base temporary directory

+        base_temp_dir = Path(f"/tmp/pytest-{safe_username}")

+        base_temp_dir.mkdir(parents=True, exist_ok=True)

+        

+        return self._makefile(ext, args, kwargs, base_temp_dir=base_temp_dir)

 

     def makeconftest(self, source: str) -> Path:

         """Write a contest.py file with 'source' as contents."""
