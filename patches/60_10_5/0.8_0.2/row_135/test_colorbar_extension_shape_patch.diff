--- a/decoupled/60/0.8_0.2/135/matplotlib_matplotlib/lib/matplotlib/tests/test_colorbar.py
+++ b/decoupled/60/0.8_0.2/135/matplotlib_matplotlib/lib/matplotlib/tests/test_colorbar.py
@@ -106,14 +106,39 @@
 

 @image_comparison(['colorbar_extensions_shape_uniform.png',

                    'colorbar_extensions_shape_proportional.png'])

+import matplotlib.pyplot as plt

+from matplotlib.colors import LogNorm

+import numpy as np

+

 def test_colorbar_extension_shape():

     """Test rectangular colorbar extensions."""

     # Remove this line when this test image is regenerated.

     plt.rcParams['pcolormesh.snap'] = False

 

-    # Create figures for uniform and proportionally spaced colorbars.

-    _colorbar_extension_shape('uniform')

-    _colorbar_extension_shape('proportional')

+    # Create some random data to fill a 2d plot

+    rng = np.random.default_rng(0)

+    img = rng.uniform(1, 5, (25, 25))

+

+    # Plot it

+    fig, ax = plt.subplots(layout="constrained")

+    plot = ax.pcolormesh(img)

+    cbar = fig.colorbar(plot, ax=ax)

+

+    vmin = 1

+    vmax = 5

+

+    plt.ion()

+    fig.show()

+    plt.pause(0.5)

+

+    # Update the plot's norm and the colorbar's norm

+    plot.norm = LogNorm(vmin, vmax)

+    cbar.norm = LogNorm(vmin, vmax)  # Update the colorbar's normalization

+    plot.autoscale()

+    plt.pause(0.5)

+

+# Test the function

+test_colorbar_extension_shape()

 

 

 @image_comparison(['colorbar_extensions_uniform.png',
