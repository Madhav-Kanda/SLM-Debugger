--- a/decoupled/60/0.8_0.2/171/pytest-dev_pytest/testing/test_warnings.py
+++ b/decoupled/60/0.8_0.2/171/pytest-dev_pytest/testing/test_warnings.py
@@ -570,30 +570,7 @@
 

 

 @pytest.mark.skipif(six.PY3, reason="Python 2 only issue")

-def test_infinite_loop_warning_against_unicode_usage_py2(testdir):

-    """

-    We need to be careful when raising the warning about unicode usage with "warnings.warn"

-    because it might be overwritten by users and this itself causes another warning (#3691).

-    """

-    testdir.makepyfile(

-        """

-        # -*- coding: utf8 -*-

-        from __future__ import unicode_literals

-        import warnings

-        import pytest

-

-        def _custom_showwarning(message, *a, **b):

-            return "WARNING: {}".format(message)

-

-        warnings.formatwarning = _custom_showwarning

-

-        @pytest.mark.filterwarnings("default")

-        def test_custom_warning_formatter():

-            warnings.warn("Â¥")

-    """

-    )

-    result = testdir.runpytest_subprocess()

-    result.stdout.fnmatch_lines(["*1 passed, * warnings in*"])

+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"

 

 

 @pytest.mark.parametrize("change_default", [None, "ini", "cmdline"])
