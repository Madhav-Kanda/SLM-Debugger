--- a/decoupled/60/0.8_0.2/222/sphinx-doc_sphinx/doc/usage/extensions/example_numpy.py
+++ b/decoupled/60/0.8_0.2/222/sphinx-doc_sphinx/doc/usage/extensions/example_numpy.py
@@ -317,21 +317,25 @@
         """

         return True

 

-    def __special__(self):

-        """By default special members with docstrings are not included.

-

-        Special members are any methods or attributes that start with and

-        end with a double underscore. Any special member with a docstring

-        will be included in the output, if

-        ``napoleon_include_special_with_doc`` is set to True.

-

-        This behavior can be enabled by changing the following setting in

-        Sphinx's conf.py::

-

-            napoleon_include_special_with_doc = True

-

-        """

-        pass

+def __special__(self):

+    """By default special members with docstrings are not included.

+

+    Special members are any methods or attributes that start with and

+    end with a double underscore. Any special member with a docstring

+    will be included in the output, if

+    ``napoleon_include_special_with_doc`` is set to True.

+

+    This behavior can be enabled by changing the following setting in

+    Sphinx's conf.py::

+

+        napoleon_include_special_with_doc = True

+

+    Additionally, to include attributes from the superclass that do not have

+    their own docstrings, the `autoclass` directive can be modified to include

+    inherited members with no docstrings.

+

+    """

+    pass

 

     def __special_without_docstring__(self):

         pass
