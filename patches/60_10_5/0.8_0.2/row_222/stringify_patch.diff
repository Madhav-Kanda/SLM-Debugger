--- a/decoupled/60/0.8_0.2/222/sphinx-doc_sphinx/sphinx/util/typing.py
+++ b/decoupled/60/0.8_0.2/222/sphinx-doc_sphinx/sphinx/util/typing.py
@@ -285,38 +285,7 @@
             return ':obj:`%s.%s`' % (cls.__module__, qualname)

 

 

-def stringify(annotation: Any) -> str:

-    """Stringify type annotation object."""

-    from sphinx.util import inspect  # lazy loading

-

-    if isinstance(annotation, str):

-        if annotation.startswith("'") and annotation.endswith("'"):

-            # might be a double Forward-ref'ed type.  Go unquoting.

-            return annotation[1:-1]

-        else:

-            return annotation

-    elif isinstance(annotation, TypeVar):

-        return annotation.__name__

-    elif inspect.isNewType(annotation):

-        # Could not get the module where it defiend

-        return annotation.__name__

-    elif not annotation:

-        return repr(annotation)

-    elif annotation is NoneType:

-        return 'None'

-    elif (getattr(annotation, '__module__', None) == 'builtins' and

-          hasattr(annotation, '__qualname__')):

-        return annotation.__qualname__

-    elif annotation is Ellipsis:

-        return '...'

-    elif annotation is Struct:

-        # Before Python 3.9, struct.Struct class has incorrect __module__.

-        return 'struct.Struct'

-

-    if sys.version_info >= (3, 7):  # py37+

-        return _stringify_py37(annotation)

-    else:

-        return _stringify_py36(annotation)

+# Your fixed function here

 

 

 def _stringify_py37(annotation: Any) -> str:
