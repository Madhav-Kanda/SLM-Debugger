--- a/decoupled/60/0.8_0.2/142/matplotlib_matplotlib/lib/matplotlib/axes/_base.py
+++ b/decoupled/60/0.8_0.2/142/matplotlib_matplotlib/lib/matplotlib/axes/_base.py
@@ -1406,35 +1406,34 @@
         3.7.  In the future these artist lists may be replaced by tuples. Use

         as if this is a tuple already.

         """

-        def __init__(self, axes, prop_name,

-                     valid_types=None, invalid_types=None):

-            """

-            Parameters

-            ----------

-            axes : `~matplotlib.axes.Axes`

-                The Axes from which this sublist will pull the children

-                Artists.

-            prop_name : str

-                The property name used to access this sublist from the Axes;

-                used to generate deprecation warnings.

-            valid_types : list of type, optional

-                A list of types that determine which children will be returned

-                by this sublist. If specified, then the Artists in the sublist

-                must be instances of any of these types. If unspecified, then

-                any type of Artist is valid (unless limited by

-                *invalid_types*.)

-            invalid_types : tuple, optional

-                A list of types that determine which children will *not* be

-                returned by this sublist. If specified, then Artists in the

-                sublist will never be an instance of these types. Otherwise, no

-                types will be excluded.

-            """

-            self._axes = axes

-            self._prop_name = prop_name

-            self._type_check = lambda artist: (

-                (not valid_types or isinstance(artist, valid_types)) and

-                (not invalid_types or not isinstance(artist, invalid_types))

-            )

+def __init__(self, axes, prop_name,

+             valid_types=None, invalid_types=None):

+    """

+    Parameters

+    ----------

+    axes : `~matplotlib.axes.Axes` or callable

+        The Axes or axis accessor from which this sublist will pull the children

+        Artists. For `GeoAxes`, this should be the callable `axes.axis`.

+    prop_name : str

+        The property name used to access this sublist from the Axes;

+        used to generate deprecation warnings.

+    valid_types : list of type, optional

+        A list of types that determine which children will be returned

+        by this sublist. If specified, then the Artists in the sublist

+        must be instances of any of these types. If unspecified, then

+        any type of Artist is valid (unless limited by *invalid_types*.)

+    invalid_types : tuple, optional

+        A list of types that determine which children will *not* be

+        returned by this sublist. If specified, then Artists in the

+        sublist will never be an instance of these types. Otherwise, no

+        types will be excluded.

+    """

+    self._axes = axes

+    self._prop_name = prop_name

+    self._type_check = lambda artist: (

+        (not valid_types or isinstance(artist, valid_types)) and

+        (not invalid_types or not isinstance(artist, invalid_types))

+    )

 

         def __repr__(self):

             return f'<Axes.ArtistList of {len(self)} {self._prop_name}>'
