--- a/decoupled/60/0.8_0.2/259/sympy_sympy/sympy/sets/sets.py
+++ b/decoupled/60/0.8_0.2/259/sympy_sympy/sympy/sets/sets.py
@@ -1103,7 +1103,7 @@
         return Max(*[set.sup for set in self.args])

 

     @property

-    def _measure(self):

+def _measure(self):

         # Measure of a union is the sum of the measures of the sets minus

         # the sum of their pairwise intersections plus the sum of their

         # triple-wise intersections minus ... etc...

@@ -1132,15 +1132,13 @@
             sets = [(sos, inter) for sos, inter in sets if inter.measure != 0]

 

             # Clear out duplicates

-            sos_list = []

-            sets_list = []

-            for set in sets:

-                if set[0] in sos_list:

-                    continue

-                else:

-                    sos_list.append(set[0])

-                    sets_list.append(set)

-            sets = sets_list

+            # Use a set to track seen intersections

+            seen_intersections = set()

+            sets = [

+                (sos, inter) 

+                for sos, inter in sets 

+                if inter not in seen_intersections and not seen_intersections.add(inter)

+            ]

 

             # Flip Parity - next time subtract/add if we added/subtracted here

             parity *= -1
