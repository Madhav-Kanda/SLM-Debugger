--- a/decoupled/60/0.8_0.2/212/sphinx-doc_sphinx/sphinx/environment/adapters/indexentries.py
+++ b/decoupled/60/0.8_0.2/212/sphinx-doc_sphinx/sphinx/environment/adapters/indexentries.py
@@ -155,22 +155,31 @@
             return key

 

         # group the entries by letter

-        def keyfunc3(item: Tuple[str, List]) -> str:

-            # hack: mutating the subitems dicts to a list in the keyfunc

-            k, v = item

-            v[1] = sorted(((si, se) for (si, (se, void, void)) in v[1].items()),

-                          key=keyfunc2)

-            if v[2] is None:

-                # now calculate the key

-                if k.startswith('\N{RIGHT-TO-LEFT MARK}'):

-                    k = k[1:]

-                letter = unicodedata.normalize('NFD', k[0])[0].upper()

-                if letter.isalpha() or letter == '_':

-                    return letter

-                else:

-                    # get all other symbols under one heading

-                    return _('Symbols')

-            else:

-                return v[2]

+import unicodedata

+from typing import Tuple, List

+

+def keyfunc3(item: Tuple[str, List]) -> str:

+    # hack: mutating the subitems dicts to a list in the keyfunc

+    k, v = item

+    v[1] = sorted(((si, se) for (si, (se, void, void)) in v[1].items()),

+                  key=keyfunc2)

+    if v[2] is None:

+        # now calculate the key

+        if k.startswith('\N{RIGHT-TO-LEFT MARK}'):

+            k = k[1:]

+        letter = unicodedata.normalize('NFD', k[0])[0].upper()

+        if letter.isalpha() or letter == '_':

+            return letter

+        elif k.startswith('@'):

+            return 'Symbols @'

+        elif k.startswith('£'):

+            return 'Symbols £'

+        elif k.startswith('←'):

+            return 'Symbols ←'

+        else:

+            # get all other symbols under one heading

+            return _('Symbols')

+    else:

+        return v[2]

         return [(key_, list(group))

                 for (key_, group) in groupby(newlist, keyfunc3)]
