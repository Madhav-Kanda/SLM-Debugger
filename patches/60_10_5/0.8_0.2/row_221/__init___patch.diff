--- a/decoupled/60/0.8_0.2/221/sphinx-doc_sphinx/sphinx/extension.py
+++ b/decoupled/60/0.8_0.2/221/sphinx-doc_sphinx/sphinx/extension.py
@@ -23,21 +23,15 @@
 

 

 class Extension:

-    def __init__(self, name: str, module: Any, **kwargs: Any) -> None:

-        self.name = name

-        self.module = module

-        self.metadata = kwargs

-        self.version = kwargs.pop('version', 'unknown version')

+def __init__(self, name: str, module: Any, **kwargs: Any) -> None:

+    # ... (existing code)

 

-        # The extension supports parallel read or not.  The default value

-        # is ``None``.  It means the extension does not tell the status.

-        # It will be warned on parallel reading.

-        self.parallel_read_safe = kwargs.pop('parallel_read_safe', None)

+    # The following lines are added to handle the viewcode_enable_epub setting

+    viewcode_enable_epub = kwargs.pop('viewcode_enable_epub', False)

+    if not viewcode_enable_epub:

+        return  # Exit early if viewcode is disabled for EPUB

 

-        # The extension supports parallel write or not.  The default value

-        # is ``True``.  Sphinx writes parallelly documents even if

-        # the extension does not tell its status.

-        self.parallel_write_safe = kwargs.pop('parallel_write_safe', True)

+    # ... (existing code)

 

 

 def verify_needs_extensions(app: "Sphinx", config: Config) -> None:
