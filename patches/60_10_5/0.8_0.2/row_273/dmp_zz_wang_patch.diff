--- a/decoupled/60/0.8_0.2/273/sympy_sympy/sympy/polys/factortools.py
+++ b/decoupled/60/0.8_0.2/273/sympy_sympy/sympy/polys/factortools.py
@@ -933,7 +933,8 @@
 

     ct, T = dmp_zz_factor(dmp_LC(f, K), u - 1, K)

 

-    b = dmp_zz_mignotte_bound(f, u, K)

+    # Use the Knuth-Cohen bound instead of the Mignotte bound

+    b = dup_zz_knuth_cohen_bound(f, u, K)

     p = K(nextprime(b))

 

     if mod is None:

@@ -1020,23 +1021,6 @@
         f, H, LC = dmp_zz_wang_lead_coeffs(f, T, cs, E, H, A, u, K)

         factors = dmp_zz_wang_hensel_lifting(f, H, LC, A, p, u, K)

     except ExtraneousFactors:  # pragma: no cover

-        if query('EEZ_RESTART_IF_NEEDED'):

-            return dmp_zz_wang(orig_f, u, K, mod + 1)

-        else:

-            raise ExtraneousFactors(

-                "we need to restart algorithm with better parameters")

-

-    result = []

-

-    for f in factors:

-        _, f = dmp_ground_primitive(f, u, K)

-

-        if K.is_negative(dmp_ground_LC(f, u, K)):

-            f = dmp_neg(f, u, K)

-

-        result.append(f)

-

-    return result

 

 

 def dmp_zz_factor(f, u, K):
