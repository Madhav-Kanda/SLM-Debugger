import matplotlib.pyplot as plt

from seaborn import miscplot as misc
from seaborn.palettes import color_palette
from .test_utils import _network


class TestPalPlot:
    """Test the function that visualizes a color palette."""
    def test_palplot_size(self):
        """
        Test the size of the plot generated by palplot.
        
        This function checks the size of the plot generated by `palplot` for different
        palette sizes and custom sizes. The function uses predefined color palettes
        and customizes the plot size when needed.
        
        Parameters:
        None
        
        Returns:
        None
        
        Assertions:
        - For a palette of 4 colors, the plot size should be (4, 1).
        - For a palette of 5 colors, the plot size should be (
        """


        pal4 = color_palette("husl", 4)
        misc.palplot(pal4)
        size4 = plt.gcf().get_size_inches()
        assert tuple(size4) == (4, 1)

        pal5 = color_palette("husl", 5)
        misc.palplot(pal5)
        size5 = plt.gcf().get_size_inches()
        assert tuple(size5) == (5, 1)

        palbig = color_palette("husl", 3)
        misc.palplot(palbig, 2)
        sizebig = plt.gcf().get_size_inches()
        assert tuple(sizebig) == (6, 2)


class TestDogPlot:

    @_network(url="https://github.com/mwaskom/seaborn-data")
    def test_dogplot(self):
        """
        Test the dogplot function.
        
        This function tests the `dogplot` function from the `misc` module to ensure it correctly generates a plot with an image.
        
        Parameters:
        None
        
        Returns:
        None
        
        Assertions:
        - The function `dogplot` should be called.
        - The number of images in the current axes (`ax.images`) should be exactly 1.
        """

        misc.dogplot()
        ax = plt.gca()
        assert len(ax.images) == 1
